# Generated by Django 4.2.3 on 2023-12-11 03:18

import baseapp_core.models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import pgtrigger.compiler
import pgtrigger.migrations
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("pghistory", "0005_events_middlewareevents"),
        ("baseapp_pages", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MetadataEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "target_object_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        choices=[("en", "English")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="meta title"
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="meta description",
                    ),
                ),
                (
                    "meta_robots",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "meta_og_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "meta_og_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=baseapp_core.models.random_name_in("pages/metadata/og_image"),
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PageEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("body", models.TextField(verbose_name="body")),
            ],
            options={
                "abstract": False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="metadata",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "baseapp_pages_metadataevent" ("id", "language", "meta_description", "meta_og_image", "meta_og_type", "meta_robots", "meta_title", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "target_content_type_id", "target_object_id") VALUES (NEW."id", NEW."language", NEW."meta_description", NEW."meta_og_image", NEW."meta_og_type", NEW."meta_robots", NEW."meta_title", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."target_content_type_id", NEW."target_object_id"); RETURN NULL;',
                    hash="f35d675a99e262a1abbec3f8b97e55ef5bc53fd1",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_61603",
                    table="baseapp_pages_metadata",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="metadata",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "baseapp_pages_metadataevent" ("id", "language", "meta_description", "meta_og_image", "meta_og_type", "meta_robots", "meta_title", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "target_content_type_id", "target_object_id") VALUES (NEW."id", NEW."language", NEW."meta_description", NEW."meta_og_image", NEW."meta_og_type", NEW."meta_robots", NEW."meta_title", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."target_content_type_id", NEW."target_object_id"); RETURN NULL;',
                    hash="36c8eb6ba3bec9f462ebf21f9f3cda74702efa26",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_0e8cb",
                    table="baseapp_pages_metadata",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="page",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "baseapp_pages_pageevent" ("body", "created", "id", "modified", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "title", "user_id") VALUES (NEW."body", NEW."created", NEW."id", NEW."modified", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."title", NEW."user_id"); RETURN NULL;',
                    hash="5f8fae3a870e68ff69c0626e947242f7abedfa53",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_f0c08",
                    table="baseapp_pages_page",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="page",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "baseapp_pages_pageevent" ("body", "created", "id", "modified", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "title", "user_id") VALUES (NEW."body", NEW."created", NEW."id", NEW."modified", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."title", NEW."user_id"); RETURN NULL;',
                    hash="9127726884fbd4dcfd8ccb172eba8ba313f8121b",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_845c1",
                    table="baseapp_pages_page",
                    when="AFTER",
                ),
            ),
        ),
        migrations.AddField(
            model_name="pageevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="pageevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="event",
                to=settings.BASEAPP_PAGES_PAGE_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="pageevent",
            name="user",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.AddField(
            model_name="metadataevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="metadataevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="event",
                to="baseapp_pages.metadata",
            ),
        ),
        migrations.AddField(
            model_name="metadataevent",
            name="target_content_type",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to="contenttypes.contenttype",
            ),
        ),
    ]
